<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <OutputType>WinExe</OutputType>
        <TargetFramework>net9.0</TargetFramework>
        <Nullable>enable</Nullable>
        <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
        <ApplicationManifest>app.manifest</ApplicationManifest>
        <AvaloniaUseCompiledBindingsByDefault>true</AvaloniaUseCompiledBindingsByDefault>
        <AssemblyName>PtnshiftCompanion</AssemblyName>
        <PublishSingleFile>true</PublishSingleFile>
        <SelfContained>true</SelfContained>
        <PublishTrimmed>true</PublishTrimmed>
        <PublishReadyToRun>true</PublishReadyToRun>
        <IncludeNativeLibrariesForSelfExtract>true</IncludeNativeLibrariesForSelfExtract>
        <EnableExperimentalJsonSerializer>true</EnableExperimentalJsonSerializer>
        <Configurations>Release MacOS;Debug Windows;Debug MacOS;Release Windows</Configurations>
        <Platforms>ARM64;x64</Platforms>
        <LangVersion>default</LangVersion>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    </PropertyGroup>
    <ItemGroup>
        <AvaloniaResource Include="Assets\**" />
    </ItemGroup>
    <ItemGroup>
      <AvaloniaXaml Remove="Models\**" />
      <Compile Remove="Models\**" />
      <EmbeddedResource Remove="Models\**" />
      <None Remove="Models\**" />
    </ItemGroup>
    <ItemGroup>
        <PackageReference Include="Avalonia" Version="11.2.5" />
        <PackageReference Include="Avalonia.Desktop" Version="11.2.5" />
        <PackageReference Include="Avalonia.Themes.Fluent" Version="11.2.5" />
        <PackageReference Include="Avalonia.Fonts.Inter" Version="11.2.5" />
        <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
        <PackageReference Include="Avalonia.Diagnostics" Version="11.2.5">
            <IncludeAssets Condition="'$(Configuration)' != 'Debug Windows' or '$(Configuration)' != 'Debug MacOS'">None</IncludeAssets>
            <PrivateAssets Condition="'$(Configuration)' != 'Debug Windows' or '$(Configuration)' != 'Debug MacOS'">All</PrivateAssets>
        </PackageReference>
        <PackageReference Include="CommunityToolkit.Mvvm" Version="8.4.0" />
        <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="10.0.0-preview.1.25080.5" />
        <PackageReference Include="Microsoft.Extensions.Logging" Version="10.0.0-preview.1.25080.5" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\Core\Core.csproj" />
    </ItemGroup>

    <Import Project="..\PlatformConfig.props" />

    <ItemGroup Condition=" '$(IsMacOS)' == 'true' ">
        <None Include="../lib/libscreenstream.dylib">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <TargetPath>libscreenstream.dylib</TargetPath>
        </None>
        <None Include="../lib/libusb-1.0.0.dylib">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <TargetPath>libusb.dylib</TargetPath>
        </None>
    </ItemGroup>

    <ItemGroup Condition=" '$(IsWindows)' == 'true' and '$(Platform)' == 'x64' ">
        <None Include="../WinScreenStream/x64/Release/WinScreenStream.dll">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <TargetPath>WinScreenStream.dll</TargetPath>
        </None>
        <None Include="../lib/libusb-1.0_x64.dll">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <TargetPath>libusb.dll</TargetPath>
        </None>
    </ItemGroup>

    <ItemGroup Condition=" '$(IsWindows)' == 'true' and '$(Platform)' == 'ARM64' ">
        <None Include="../WinScreenStream/ARM64/Release/WinScreenStream.dll">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <TargetPath>WinScreenStream.dll</TargetPath>
        </None>
        <None Include="../lib/libusb-1.0_arm64.dll">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <TargetPath>libusb.dll</TargetPath>
        </None>
    </ItemGroup>

    <!-- <Target Name="CopyDlls" AfterTargets="Publish" Condition=" '$(IsWindows)' == 'true' ">
        <Copy SourceFiles="$(OutputPath)WinScreenStream.dll" DestinationFolder="$(PublishDir)" />
        <Copy SourceFiles="$(OutputPath)libusb.dll" DestinationFolder="$(PublishDir)" />
    </Target> -->

    <PropertyGroup Condition="'$(Platform)' == 'x64' AND '$(IsWindows)' == 'true'">
        <RuntimeIdentifier>win-x64</RuntimeIdentifier>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Platform)' == 'ARM64' AND '$(IsWindows)' == 'true'">
        <RuntimeIdentifier>win-arm64</RuntimeIdentifier>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Platform)' == 'x64' AND '$(IsMacOS)' == 'true'">
        <RuntimeIdentifier>osx-x64</RuntimeIdentifier>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Platform)' == 'ARM64' AND '$(IsMacOS)' == 'true'">
        <RuntimeIdentifier>osx-arm64</RuntimeIdentifier>
    </PropertyGroup>
</Project>
